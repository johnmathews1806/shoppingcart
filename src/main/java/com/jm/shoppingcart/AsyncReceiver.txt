package com.jm.shoppingcart;

import javax.jms.MessageListener;
import javax.jms.Connection;
import javax.jms.DeliveryMode;
import javax.jms.Destination;
import javax.jms.ExceptionListener;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageProducer;
import javax.jms.Session;
import javax.jms.TextMessage;

import org.apache.activemq.ActiveMQConnection;
import org.apache.activemq.ActiveMQConnectionFactory;


public class AsyncReceiver  implements MessageListener, ExceptionListener{

	public static Connection connection; 
	public static void main(String[] args) throws Exception
	{		
		ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(ActiveMQConnection.DEFAULT_BROKER_URL);

		// Create a Connection
		connection = connectionFactory.createConnection();
		//connection.start();	
		
		// set an asynchronous message listener
		AsyncReceiver asyncReceiver = new AsyncReceiver();
		connection.setExceptionListener(asyncReceiver);		

		// Create a Session
		Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);

		// Create the destination (Topic or Queue)
		Destination destination = session.createQueue("SHOPPINGCART.MESSAGES");
		
		MessageConsumer consumer = session.createConsumer(destination);		
		consumer.setMessageListener(asyncReceiver);

		// start the connection
		connection.start();                                                                         
	}

	public void onMessage(Message message)
	{
		TextMessage msg = (TextMessage) message;
		try {
			if(msg.getText().equals("exit")){
				connection.close();
				System.out.println("Application Exits");
			}else{
				System.out.println("received: " + msg.getText());
			}
		} catch (JMSException ex) {
			ex.printStackTrace();
		}
	}

	public synchronized void onException(JMSException ex) {
		System.out.println("JMS Exception occured.  Shutting down client.");
	}

}
