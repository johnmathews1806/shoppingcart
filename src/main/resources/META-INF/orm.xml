<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings
        xmlns="http://java.sun.com/xml/ns/persistence/orm"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
        version="2.0">
        
	<!--Maker-checker Queries Start-->
    <named-query name="MakerCheckerHistoryDetails.getRequestCountByOperationAndKey">
        <query>SELECT COUNT(d) FROM MakerCheckerHistoryDetails d ,MakerCheckerHistory h WHERE d.makerCheckerHistory.referenceNumber = h.referenceNumber
         and h.status=?1 and d.operation=?2 AND d.uniqueKeyValue=?3</query>
    </named-query>
    <!--Maker-checker Queries End -->
    
    <!--User Queries Start-->
     <named-query name="User.setStatusFor">
        <query>update User u set u.status = ?1 where u.userId = ?2</query>
    </named-query>
    
    <named-query name="User.setOnlineStatus">
        <query>update User u set u.onlineStatus = ?1 ,u.failedLoginAttempts =0, u.lastFailedLogin = null where u.userId = ?2</query>
    </named-query>
    
     <named-query name="User.setUserFlags">
        <query>update User u set u.failedLoginAttempts =0, u.lastFailedLogin = null,u.lastLoginDate =SYSDATE where u.userId = ?1</query>
    </named-query>
    
     
    <!--User Queries End-->
    
    <!--Intraday Queries Start-->
     <named-query name="AggregateResult.findRecipientNationalityResult">
        <query>select COUNT(t) AS recordCount, recipientNationality AS country from Transaction t group by t.recipientNationality</query>
    </named-query>
    <!--Intraday Queries End-->
   	
   	<!--PartnerNotificationStatus Queries Start-->
     <named-query name="PartnerNotificationStatus.getCountByPartnerIdAndEventId">
        <query>SELECT COUNT(d) FROM PartnerNotificationStatus d where d.partnerId=?1 and d.eventId=?2</query>
    </named-query>
    <!--PartnerNotificationStatus Queries End-->
    
    <!-- Transaction Queries Start -->
    <named-query name="Transaction.updateTransactionStatus">
        <query>update Transaction t set t.transactionStatus = ?1 WHERE t.bankReferenceNumber = ?2</query>
    </named-query>
   <!-- 
    <named-native-query name="Transaction.setTransactionStatus">
    	<query>CALL grs.grs_transaction.set_status(?1, ?2, ?3, ?4)</query>
    </named-native-query>
    -->
     <named-query name="Transaction.getCountryList">
        <query>SELECT distinct recipientNationality from Transaction order by recipientNationality</query>
    </named-query>
    <!-- Transaction Queries End -->
    
    <!-- Corridor Queries Start -->
    
    <!-- <named-query name="CorridorAggregate.findTxnCountResult">
        <query>select SUM(transactionCount), countryId from CorridorAggregate where createdDate> sysdate-1 group by countryId</query>
    </named-query> 
    -->
    <named-query name="CorridorAggregate.findHistoricalTxnCount">
        <query>
        <![CDATA[
        select SUM(transactionCount), countryId from CorridorAggregate where createdDate<= sysdate-1 group by countryId
        ]]>
        </query>
    </named-query> 
    
    <named-query name="CorridorAggregate.findDateRangeTxnCount">
        <query>SELECT SUM(transactionCount), countryId FROM CorridorAggregate where createdDate BETWEEN ?1 and ?2 GROUP BY countryId</query>
    </named-query>
    <!-- Corridor Queries End -->
    
    <!--Partner Queries Start-->
     <named-query name="Partner.findAbbrByPartnerId">
        <query>select p.partnerAbbr from Partner p where p.partnerId =?1</query>
    </named-query>
    <!--Partner Queries End-->
    
     <!--Permissions Queries Start-->
     <named-query name="Menu.findMenusId">
        <query>select DISTINCT p.menuId FROM Permissions p ,RolePermissions rp WHERE p.permId = rp.permId and rp.roleId =?1 and rp.status = 'A' and p.permStatus = 'A' order by p.menuId</query>
    </named-query>
     <named-query name="Permissions.findMenuActions">
        <query>select  p.menuId , p.action FROM Permissions p ,RolePermissions rp where rp.roleId = ?1 and rp.permId = p.permId and p.permStatus = 'A' and rp.status = 'A' </query>
    </named-query>
    <!--Permissions Queries End-->
    
     <!--Menu Queries Start-->
      <named-query name="Menu.findAll">
        <query>SELECT m FROM Menu m WHERE  m.menuId In ?1 or m.menuId IN (select DISTINCT e1.parentMenuId from Menu e1 where e1.menuId In (?1)) and m.status = 'A' order by m.menuId</query>
    </named-query> 
      <!--Menu Queries End-->
    
</entity-mappings>